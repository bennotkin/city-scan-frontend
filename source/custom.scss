// Available sass variables from Bootstrap
// $body-bg	The page background color.
// $body-color	The page text color.
// $link-color	The link color.
// $input-bg	The background color for HTML inputs.
// $popover-bg	The background color for popovers (for example, when a citation preview is shown).

// $font-family-sans-serif	The sans-serif font family for the page.
// $font-family-monospace	The monospace font family for the page.
// $font-size-root	The base font size for the page.
// $toc-font-size	The font size for the page TOC.
// $h1-font-size Font sizes for the specified headings.
// $h2-font-size
// $h3-font-size
// $h4-font-size
// $h5-font-size

/*-- scss:defaults --*/
$presentation-font-size-root: 11pt;
$font-size-root: 11pt;
$pale-color: #5a6570;
$topbar-height: 2rem;

// Print variables
$column-gap: .25in;
$page-margin-top: .5in;
$page-margin-bottom: .5in;
$page-margin-left: 0.5in;
$page-margin-right: 0.5in;

/*-- scss:rules --*/

// SCROLLYTELLING LAYOUT
// Sets the page to full screen
.page-columns main.content {
  @media screen {
    grid-column: screen-start-inset / screen-end-inset; // Maybe applies to print if I keep bootstrap style sheets
    display: grid; // Overridden by print
    grid-template-columns: 1fr 2fr;
    grid-template-rows: 2em auto auto auto;
    grid-column-gap: 2ch;
    align-items: start;
  }
  @media print { display: block; }
  min-height: 90vh;
  padding-bottom: 5vh;
  border-bottom: 2px;
  margin-top: 0;
  margin-bottom: 5vh;
}

.text-column {
  @media screen {
    grid-column: 1 / 2;
    grid-row: 3 / 5;
    grid-column-gap: 2ch; // Set with sass variable? //Is this used / right
  }

  @media screen {
  h3 {
    grid-column: 1 / 2; // Overridden by print
    grid-row-start: 1; // Overridden by print
    margin-top: 0; // Also set in print
  }
}
@media print {
  h2, h3 {
    grid-column: 1 / 4;
    grid-row: 1 / 2;
    // margin-top: 0; // Already set for screen
  }
  h3 { align-self: start; }
}

  section {
    @media screen {
      // Prevent map from scrolling up too much & ensuring all sections hit scrollama offset point
        min-height: 50vh;
        section.level4 {min-height: 0vh; padding-bottom: 1rem; } // When is this used?
        // This is probably an overly complicated way to ensure each slide is vertically centered
        display: flex;
        flex-direction: column;
        justify-content: center;
      }
    }

    section.level3 {
      @media screen { padding-bottom: 3rem; }
      @media print {
        // height: calc(8.5in - $page-margin-top);
        height: 7.45in;
        // min-height: 7.5in;
        width: 100%;
        display: grid;
        grid-template-columns: 1fr 1fr 1fr;
        grid-column-gap: $column-gap;
        grid-template-rows: 1fr repeat(2, min-content) minmax(.5in, max-content);
        align-items: end;
        align-content: stretch;
        // padding-bottom: 3rem;
        // border: 1px solid black;
      }
    }

  @media screen {
    >section:last-child {
      margin-bottom: 100vh;
    }
  }

  div.takeaways, div.method { grid-column: 1 / 2; }
  
  div.footnote {
    @media screen {
        grid-column: 1 / 2; // Overridden by print
        grid-row: 3 / 4; // Overridden by print
        // align-self: end; // Now that the divs are `display: flex`, `align-self: end` pushes to the rights
      }

    @media print {
      grid-column: 1 / 4;
      grid-row: 4 / 5;
      align-self: end;
      column-count: 3;
      column-gap: $column-gap;
      border-top: 1px solid $pale-color;
      padding-top: 4px;
      color: $pale-color;
      // min-height: .5in;
      height: .5in;
  
      p {
        margin-top: 0;
      }  
    }
  }

  form {
    width: 100%
  }
}

// TYPOGRAPHY
.text-column {
  @media screen {
  // Text is grey when not in focus, black when in focus
  color: darkgrey;
  section.is-active {color: black;};
  section#executive-summary { color: black; };
  }

  h1 {
    font-size: 3rem;
    font-weight: 600;
    color: #1e90ff;
    background-image: radial-gradient(dodgerblue 1px, transparent 0);
    background-size: 10px 10px;
    height: 10rem;
    padding: calc(100vh - 10rem) 1.5rem 10rem 1.5rem;
    margin-left: -1.5rem;
    margin-right: -1.5rem;
    margin-bottom: -1px;
    margin-top: 0;
  }

  h2, h3 {
    color: black;
    font-weight: 400;
    text-transform: uppercase;
  }

  h2 { // Previously also applied to h2::before
    font-size: 2rem;
    color: dodgerblue;
    background-image: radial-gradient(dodgerblue 1px, transparent 0);
    background-size: 10px 10px;
    padding: 15vh 1.5rem 0.5rem 1.5rem;
    @media print{ padding: 2in 1.5rem 4.5in 1.5rem }
    margin-left: -1.5rem;
    margin-right: -1.5rem;
  }

  h3 { // Previously also applied to h3::before 
    font-size: 1.1rem;
    border-bottom: 1px solid black;
  }
  h4 { font-size: 1.1rem; }
  p { font-size: 1rem; }
  .takeaways { font-size: 1.1rem; }
  div.footnote p {
    font-size: 0.8rem;
    color: $pale-color;
  }

  ul {
    padding-left: .25in;
    margin-block-start: 0;
    margin-block-end: 0;
  }
}

// MAPS & FIGURES
@media screen {
  .maps {
    grid-column: 2 / 3;
    grid-row: 1 / 5;
    position: sticky;
    top: $topbar-height;
    height: 100vh;
  
    // I now set image height in R, but leaving this here to remember CSS tags
    // img,
    // .leaflet.html-widget {
      // height: 100vh !important;
    // }
  }
}

@media print {
  section.level3>p:has(img) {
    grid-column: 2 / 4;
    grid-row: 1 / 4;
    // grid-row-end: 4;
    width: 100%;
    // height: 1in;
    
    img {
      width: 100%;
      height: 100%;
    }
  }
}

@media screen{
// TOP BAR 
.topbar {
  width: 100%;
  height: $topbar-height;
  background-color: white;
  display: grid;
  grid-template-columns: 2fr 4fr;
  position: fixed;
  z-index: 1;
  text-align: left;
  border-bottom: 1px solid black;
  padding-top: 3px;

  h1 {
    grid-column: 1/2;
    padding: .25rem .5rem;
    font-size: 1.1rem;
    font-weight: 400;
    text-transform: uppercase;
    margin: 0;
  }

  a {
    color: black;
    padding: .25rem .5rem;
  }
}

// Navigation Menu
.navigation {
  grid-column: 2 / 3;
  grid-row: 1 / 2;
  display: flex;
  flex-direction: row;
  // justify-content: end;

  #dynamic-header {
    text-transform: uppercase;
  }

  // This puts "Inputs version" on the same line as the navivation menu 
  div.cell+p {
    margin-top: 0;
    padding: .25rem .5rem;
  }

  ul {
    // background: #FFF;
    list-style: none;
    margin: 0;
    padding-left: 0;
  }

  >ul>li {
    padding-top: 0;
    padding-bottom: 0;
  }

  li {
    color: #000;
    background: #FFF;
    display: block;
    float: left;
    padding: .25rem 0.5rem;
    position: relative;
    text-decoration: none;
    transition-duration: 0.5s;
  }

  li a {
    color: #000;
  }

  li:hover,
  li:focus-within {
    cursor: pointer;
  }

  // To highlight the chain of selected items
  li:focus-within,
  li:hover {
    background: lightblue;
  }

  // But I don't want to highlight the whole table of contents
  >ul>li:focus-within,
  >ul>li:hover {
    background-color: #FFF;
    border: 1px solid black
  }

  // li:focus-within a {
  //   outline: none;
  // }

  ul li ul,
  ul li ul li ul {
    background: #FFF;
    visibility: hidden;
    opacity: 0;
    min-width: 5rem;
    position: relative;
    transition: all 0.5s ease;
    margin-top: .5rem;
    display: none;
  }

  ul li ul {
    position: relative;
    left: 0;
  }

  ul li ul li ul {
    position: absolute;
    left: 100%;
    right: -105%;
    top: -0.5em;
    border: 1px solid black;
  }

  ul li:hover>ul,
  ul li:focus-within>ul,
  ul li ul:hover,
  ul li ul:focus {
    visibility: visible;
    opacity: 1;
    display: block;
  }

  ul li ul li {
    clear: both;
    width: 100%;
  }
}
}

// Section & Slide Counters
.text-column {
  h1 {
    counter-reset: section_count;
    // counter-reset: slide_count;
  }

  h2 {
    counter-increment: section_count;
    counter-reset: slide_count;
  }

  h3 {
    counter-increment: slide_count;
  }

  h2::before {
      // content: "string";
      color: $pale-color;
      content: counter(section_count);
      padding-right: 3ch;
    }

  h3::before {
    // content: "string";
    color: $pale-color;
    content: counter(section_count) "." counter(slide_count);
    padding-right: 1ch;
    }
}

// HIDDEN ELEMENTS
#title-block-header { display: none; }

.setup section { display: none; }

// Print specific; either move to above, or move above to here
@media print {
  body {
    font-family: -apple-system, BlinkMacSystemFont, avenir next, avenir, segoe ui, helvetica neue, helvetica, Cantarell, Ubuntu, roboto, noto, arial, sans-serif;
    font-size: 10pt;
    color: black;
  }

  h2 {
    page-break-after: always;
    string-set: section_title content(); 
  }

  // h3 {
  //   display: none;
  //   string-set: slide_title content(); 
  // }
  p { orphans: 3; }
  
  .text-column {
    section.level2 {
      page-break-before: always;
      page-break-inside: avoid;
    }

    section.level3 {
      page-break-after: always;
      page-break-inside: avoid;
    }
  }
  
  @page {
    
    font-family: -apple-system, BlinkMacSystemFont, avenir next, avenir, segoe ui, helvetica neue, helvetica, Cantarell, Ubuntu, roboto, noto, arial, sans-serif;
    font-size: 11pt;
    color: $pale-color;

    size: letter landscape;
    margin-top: $page-margin-top;
    margin-bottom: $page-margin-bottom;
    margin-left: $page-margin-left;
    margin-right: $page-margin-right;
    // padding: 0 .1in;
    // border-left: 1px solid $pale-color;
    // border-right: 1px solid $pale-color;
    
    // @top-left {
    //   content: string(slide_title);
    //   color: black;
    //   font-weight: 400;
    //   text-transform: uppercase;
    //   font-size: 1.1rem;
    //   border-bottom: 1px solid black;
    // }
    
    @left-middle {
      content: string(section_title);
      writing-mode: vertical-rl;
      text-orientation: mixed;
      transform: rotate(180deg);
    }
    
    @right-top {
      content: "Goris, Armenia"; // This needs to be automated with string-set
      writing-mode: vertical-rl;
      text-orientation: mixed;
    }
    
    @right-middle {
      content: "City Scan";
      writing-mode: vertical-rl;
      text-orientation: mixed;
    }
    
    @right-bottom {
      content: "City Resilience Program";
      writing-mode: vertical-rl;
      text-orientation: mixed;
    }
    
    @bottom-left-corner {
      text-align: center;
      content: counter(page);
    }
  }
}