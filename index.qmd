---
format:
  html:
    theme: [source/custom.scss, none]
editor: source
execute:
  echo: false
  output: false
---

::: setup

```{r}
#| include: false
# Read functions & packages
# Only the github version of leaflet supports terra, in place of raster, which is now required as sp (on which raster depends) is being deprecated
# devtools::install_github('rstudio/leaflet')
source("source/fns.R")
source("source/helpers.R")

city_dir <- file.path("mnt/", readLines("city-dir.txt"))
user_input_dir <- file.path(city_dir, "01-user-input/")
process_output_dir <- file.path(city_dir, "02-process-output/")
spatial_dir <- file.path(process_output_dir, "spatial/")
output_dir <- file.path(city_dir, "03-render-output/")
styled_maps_dir <- "generated/styled-maps/"

# City parameters
city_params <- read_yaml(file.path(user_input_dir, "city_inputs.yml"))
# cities <- list.files("cities")
city <- city_params$city_name
city_string <- tolower(city) %>% stringr::str_replace_all(" ", "-")
country <- city_params$country

# Load map layer parameters
layer_params <- read_yaml('source/layers.yml')
```

```{r}
#| include: false
# Visualization parameters (Am I using all of them?)
# Interactivve Plots (Leaflet)
basemap_opacity <- 0.3
legend_opacity <- 0.8
vwidth <- 900
vheight <- vwidth

# Static map
layer_alpha <- 0.8
map_width <- 6.9
map_height <- 5.9
aspect_ratio <- map_width / map_height

# this is to enable fractional zoom in mapshot
useragent <- 'Mozilla/5.0 (compatible; MSIE 10.6; Windows NT 6.1; Trident/5.0; InfoPath.2; SLCC1; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 2.0.50727) 3gpp-gba UNTRUSTED/1.0'
```

---
title: "`r paste(city, country, sep = ', ')`, City Scan"
---

```{r}
# Get text
city_text <- read_md(file.path(user_input_dir, "text-files/manual-text.md"))
generic_text <- read_yaml("source/generic-text.yml")
slide_texts <- merge_lists(city_text, generic_text)
```

```{r}
#| include: false

# Define the AOI
aoi <- st_zm(st_read(file.path(user_input_dir, "AOI")))
aoi_bounds <- st_bbox(aoi)
static_map_bounds <- aspect_buffer(aoi, aspect_ratio, buffer_percent = 0.05)

# Inititate the map here, will build on it in each "slide"
basemap <- plot_basemap("vector")

## Static:
zoom <- round(14.6 + -0.00015 * units::drop_units(sqrt(st_area(aoi))))
tiles <- annotation_map_tile(type = "cartolight", zoom = zoom)

# Keep track of added layers
added_layers <- c()
```
:::

::: topbar
# {{< meta title >}}

::: navigation
```{r}
#| output: asis
# Dynamically add sections to table of contents ... there's probably a better way?
sections <- readLines("index.qmd") %>%
  subset(str_detect(., "^##")) %>% str_replace("# ", "- ") %>% str_replace_all("#", "  ")

anchors <- sections %>% str_extract("^\\s*- (.*$)", group = T) %>% tolower() %>% str_replace_all(c("[^a-z\\s]" = "", "\\s+" = "-")) %>%
  str_replace("(.*)", "(#\\1)")

paste0(str_replace(sections, "(^\\s*- )(.+$)", "\\1[\\2]"), anchors) %>% { cat("- <span id='dynamic-header'>City Scan</span>  &or;", ., sep = "\n") }
```

[Inputs version](https://bennotkin.quarto.pub/gagarin-city-scan-form/)
:::
:::

::: text-column
# {{< meta title >}}

## Executive Summary
```{r}
#| output: asis
print_slide_text(slide_texts$executive_summary$executive_summary)
```

## Setting the Context

### Basic City Information

```{r}
# Add a map layer? But it's just the AOI
```

```{r}
#| output: asis
print_slide_text(slide_texts$setting_the_context$basic_city_info)
```

### The State of Urban Infrastructure and Service Delivery
```{r}
#| output: asis
print_slide_text(slide_texts$setting_the_context$infrastructure_and_service_delivery)
```

## Population and Demographic Trends

### Population Density

```{r}
#| output: true
# Read population data
# Eventually, move fuzzy_read inside of create_layer_function
pop <- fuzzy_read(spatial_dir, "population", rast)

# Interactive Plot (Leaflet)
add_pop_layer <- create_layer_function(data = rast_as_vect(pop), yaml_key = "population")
basemap %>% add_pop_layer() %>% add_aoi()

# Static plot (PNG)
plot_pop <- plot_static(data = pop, yaml_key = "population")
save_plot(plot = plot_pop, filename = "pop.png", directory = styled_maps_dir)
```

```{r}
#| output: asis
print_slide_text(slide_texts$demographics$population_density)
```

### Relative Wealth Index

```{r}
#| output: true
# Read RWI
# (Necessary to include ["rwi"] because shapefile has multiple layers)
rwi <- fuzzy_read(spatial_dir, "rwi", FUN = vect)["rwi"]

# Interactive Plot (Leaflet)
add_rwi_layer <- create_layer_function(
  data = rwi, yaml_key = "rwi",
  labFormat = labelFormat(digits = 1))
basemap %>% add_rwi_layer() %>% add_aoi()

# Static plot (PNG)
plot_rwi <- plot_static(data = rwi, yaml_key = "rwi") #+ theme(legend.position = "none")
save_plot(plot = plot_rwi, filename = "rwi.png", directory = styled_maps_dir)
```

```{r}
#| output: asis
print_slide_text(slide_texts$demographics$relative_wealth)
```

## Economic Activity

### Economic Hotspots

```{r}
#| output: true
economic_activity <- fuzzy_read(spatial_dir, "avg_rad_sum", rast)

# Interactive Plot (Leaflet)
add_economic_activity_layer <- create_layer_function(
  data = rast_as_vect(economic_activity), yaml_key = "economic_activity",
  labFormat = labelFormat(digits = 2))
basemap %>% add_economic_activity_layer() %>% add_aoi()

# Static plot (PNG)
plot_economic_activity <- plot_static(data = economic_activity, yaml_key = "economic_activity")
save_plot(plot = plot_economic_activity, filename = "economic_activity.png", directory = styled_maps_dir)
```

```{r}
#| output: asis
print_slide_text(slide_texts$economic_activity$economic_hotspots)
```

### Change in Economic Hotspots

```{r}
#| output: true
economic_change <- fuzzy_read(spatial_dir, "linfit", rast)

# Interactive Plot (Leaflet)
add_economic_change_layer <- create_layer_function(data = rast_as_vect(economic_change), yaml_key = "economic_change")
basemap %>% add_economic_change_layer() %>% add_aoi()

# Static plot (PNG)
plot_economic_change <- plot_static(data = economic_change, yaml_key = "economic_change")
save_plot(plot = plot_economic_change, filename = "economic_change.png", directory = styled_maps_dir)
```

```{r}
#| output: asis
print_slide_text(slide_texts$economic_activity$economic_change)
```

:::
